term,formula,func,ui,fitting,fittedlinear,withMathJax('Formula $$y=\\alpha+\\beta x$$'),"function(x) {                isolate({                    linear_alpha=as.numeric(input$linear_alpha)                    linear_beta=as.numeric(input$linear_beta)                    invalid=is.na(linear_alpha) | is.na(linear_beta)                    func=linear_alpha * x + linear_beta                    ifelse(invalid ,return(NULL),return ( func ))                })            }","fluidRow(                    column(width = 6,                        numericInput(                            inputId='linear_alpha',                            label=withMathJax('$$\\alpha$$'),                            value=1                        )                    ),                    column(width = 6,                        numericInput(                            inputId='linear_beta',                            label=withMathJax('$$\\beta$$'),                            value=0                        )                    )                )","try(                nlsLM(Response ~ alpha * Dose + beta,                    data=rv$data_filtered,                    start = list(alpha=1,                        beta=1)                ),                silent = T            )","function(x) {                    coef(fit)['alpha'] * x + coef(fit)['beta']                }"logistic,withMathJax('Formula $$y=\\frac{L}{1+e^{-k(x-x_0)}}$$'),"function(x) {                isolate({                    logistic_l=as.numeric(input$logistic_l)                    logistic_k=as.numeric(input$logistic_k)                    logistic_x0=as.numeric(input$logistic_x0)                    invalid=is.na(logistic_l) | is.na(logistic_k) | is.na(logistic_x0)                    func=logistic_l / (1 + exp(-logistic_k * (x - logistic_x0 )))                    ifelse(invalid ,return(NULL),return ( func ))                })            }","fluidRow(                    column(width = 4,                        numericInput(                            inputId='logistic_l',                            label=withMathJax('$$L$$'),                            value=0.1                        )                    ),                    column(width = 4,                        numericInput(                            inputId='logistic_k',                            label=withMathJax('$$k$$'),                            value=1                        )                    ),                    column(width = 4,                        numericInput(                            inputId='logistic_x0',                            label=withMathJax('$$x_0$$'),                            value=5                        )                    )                )","try(                nlsLM(Response ~ l / (1 + exp(-k * (Dose - x0 ))),                    data=rv$data_filtered,                    start = list(l=input$logistic_l,                        k=input$logistic_k,                        x0=input$logistic_x0)                ),                silent = T            )","function(x) {                    coef(fit)['l']  / (1 + exp(-coef(fit)['k'] * (x - coef(fit)['x0'] )))                }"